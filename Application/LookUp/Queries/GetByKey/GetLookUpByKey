using Application.Common.Interfaces;
using Domain.Entities;
using MediatR;
using Microsoft.EntityFrameworkCore;

namespace Application.LookUp.Queries.GetByKey;

public record GetLookUpByKey : IRequest<ICollection<Lookup>> {
    public string Type {get; init;}
}

public class GetLookUpByKeyHandler : IRequestHandler<GetLookUpByKey, ICollection<Lookup>> {
    private readonly IAppDbContext _context;

    public GetLookUpByKeyHandler(IAppDbContext context) {
        _context = context;
    }
    public async Task<ICollection<Lookup>> Handle(GetLookUpByKey request, CancellationToken cancellationToken) {
        return await _context.Lookups.Where(l => l.Type == request.Type).ToListAsync();
    }
}